{"ast":null,"code":"import { baseUrl, headers } from \"./utils\";\n\nclass Auth {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _getResponseData(res) {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  } //Register user\n\n\n  registerUser(data) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._getResponseData);\n  } //Sign in user\n\n\n  signInUser(data) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._getResponseData);\n  } //Sign out user\n\n\n  signOutUser() {\n    return fetch(`${this._baseUrl}/signout`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  } //Check token and get user email\n\n\n  validateUser(token) {\n    console.log(token);\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: { ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._getResponseData);\n  }\n\n}\n\nconst auth = new Auth({\n  baseUrl: \"https://register.nomoreparties.co\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default auth;","map":{"version":3,"sources":["/Users/Marina/Yandex Practicum/around-react/src/utils/auth.js"],"names":["baseUrl","headers","Auth","constructor","_baseUrl","_headers","_getResponseData","res","ok","json","Promise","reject","status","registerUser","data","fetch","method","body","JSON","stringify","then","signInUser","signOutUser","validateUser","token","console","log","Authorization","auth"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,SAAjC;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAAC;AAAEH,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAuB;AAChC,SAAKG,QAAL,GAAgBJ,OAAhB;AACA,SAAKK,QAAL,GAAgBJ,OAAhB;AACD;;AAEDK,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AACpB,WAAOA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAA7B;AACD,GARQ,CAUT;;;AACAC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,WAAOC,KAAK,CAAE,GAAE,KAAKX,QAAS,SAAlB,EAA4B;AACtCY,MAAAA,MAAM,EAAE,MAD8B;AAEtCf,MAAAA,OAAO,EAAE,KAAKI,QAFwB;AAGtCY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHgC,KAA5B,CAAL,CAIJM,IAJI,CAIC,KAAKd,gBAJN,CAAP;AAKD,GAjBQ,CAmBT;;;AACAe,EAAAA,UAAU,CAACP,IAAD,EAAO;AACf,WAAOC,KAAK,CAAE,GAAE,KAAKX,QAAS,SAAlB,EAA4B;AACtCY,MAAAA,MAAM,EAAE,MAD8B;AAEtCf,MAAAA,OAAO,EAAE,KAAKI,QAFwB;AAGtCY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHgC,KAA5B,CAAL,CAIJM,IAJI,CAIC,KAAKd,gBAJN,CAAP;AAKD,GA1BQ,CA4BT;;;AACAgB,EAAAA,WAAW,GAAG;AACZ,WAAOP,KAAK,CAAE,GAAE,KAAKX,QAAS,UAAlB,EAA6B;AACvCY,MAAAA,MAAM,EAAE,QAD+B;AAEvCf,MAAAA,OAAO,EAAE,KAAKI;AAFyB,KAA7B,CAAL,CAGJe,IAHI,CAGC,KAAKd,gBAHN,CAAP;AAID,GAlCQ,CAoCT;;;AACAiB,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAOT,KAAK,CAAE,GAAE,KAAKX,QAAS,WAAlB,EAA8B;AACxCH,MAAAA,OAAO,EAAE,EACP,GAAG,KAAKI,QADD;AAEPsB,QAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AAD+B,KAA9B,CAAL,CAKJJ,IALI,CAKC,KAAKd,gBALN,CAAP;AAMD;;AA7CQ;;AAgDX,MAAMsB,IAAI,GAAG,IAAI1B,IAAJ,CAAS;AACpBF,EAAAA,OAAO,EAAE,mCADW;AAEpBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFW,CAAT,CAAb;AAOA,eAAe2B,IAAf","sourcesContent":["import { baseUrl, headers } from \"./utils\";\n\nclass Auth {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _getResponseData(res) {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  }\n\n  //Register user\n  registerUser(data) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getResponseData);\n  }\n\n  //Sign in user\n  signInUser(data) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._getResponseData);\n  }\n\n  //Sign out user\n  signOutUser() {\n    return fetch(`${this._baseUrl}/signout`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  //Check token and get user email\n  validateUser(token) {\n    console.log(token);\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(this._getResponseData);\n  }\n}\n\nconst auth = new Auth({\n  baseUrl: \"https://register.nomoreparties.co\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}