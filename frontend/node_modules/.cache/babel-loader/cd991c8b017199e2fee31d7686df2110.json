{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  } //GET Get initial cards\n\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then(res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  } //GET Get user info\n\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    }).then(res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  } //PATCH Set user info\n\n\n  setUserInfo({\n    name,\n    about\n  }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  } //PATCH Set user avatar\n\n\n  setUserAvatar({\n    avatar\n  }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  } //POST Add new place\n\n\n  addCard({\n    name,\n    link\n  }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  } //DELETE Remove place\n\n\n  removeCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: \"DELETE\"\n    }).then(res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  } //PUT/DELETE Change Like status\n\n\n  changeLikeCardStatus(cardId, method) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: method\n    }).then(res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\n  } //Get initial data\n\n\n  getAppInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n\n} //Init api\n\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n  headers: {\n    authorization: \"02dcf3f3-4313-4731-b00a-f80d0e88b6bf\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/Marina/Yandex Practicum/around-react/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","getInitialCards","fetch","then","res","ok","json","Promise","reject","status","getUserInfo","setUserInfo","name","about","method","body","JSON","stringify","setUserAvatar","avatar","addCard","link","removeCard","cardId","changeLikeCardStatus","getAppInfo","all","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n\n  //GET Get initial cards\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n    }).then((res) =>\n      res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n    );\n  }\n\n  //GET Get user info\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n    }).then((res) =>\n      res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n    );\n  }\n\n  //PATCH Set user info\n  setUserInfo({ name, about }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ name, about }),\n    }).then((res) =>\n      res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n    );\n  }\n\n  //PATCH Set user avatar\n  setUserAvatar({ avatar }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ avatar }),\n    }).then((res) =>\n      res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n    );\n  }\n\n  //POST Add new place\n  addCard({ name, link }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: \"POST\",\n      body: JSON.stringify({ name, link }),\n    }).then((res) =>\n      res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n    );\n  }\n\n  //DELETE Remove place\n  removeCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: \"DELETE\",\n    }).then((res) =>\n      res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n    );\n  }\n\n  //PUT/DELETE Change Like status\n  changeLikeCardStatus(cardId, method) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: method,\n    }).then((res) =>\n      res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n    );\n  }\n\n  //Get initial data\n  getAppInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n}\n\n//Init api\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n  headers: {\n    authorization: \"02dcf3f3-4313-4731-b00a-f80d0e88b6bf\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}