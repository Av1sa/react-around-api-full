{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n\n  _getResponseData(res) {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  } //GET Get initial cards\n\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  } //GET Get user info\n\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  } //PATCH Set user info\n\n\n  setUserInfo({\n    name,\n    about\n  }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => this._getResponseData(res));\n  } //PATCH Set user avatar\n\n\n  setUserAvatar({\n    avatar\n  }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => this._getResponseData(res));\n  } //POST Add new place\n\n\n  addCard({\n    name,\n    link\n  }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this._getResponseData(res));\n  } //DELETE Remove place\n\n\n  removeCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: \"DELETE\"\n    }).then(res => this._getResponseData(res));\n  } //PUT/DELETE Change Like status\n\n\n  changeLikeCardStatus(cardId, method) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: method\n    }).then(res => this._getResponseData(res));\n  } //Get initial data\n\n\n  getAppInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n\n} //Init api\n\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n  headers: {\n    authorization: \"02dcf3f3-4313-4731-b00a-f80d0e88b6bf\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/Marina/Yandex Practicum/around-react/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_getResponseData","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","getUserInfo","setUserInfo","name","about","method","body","JSON","stringify","setUserAvatar","avatar","addCard","link","removeCard","cardId","changeLikeCardStatus","getAppInfo","all","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n\n  _getResponseData(res) {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  }\n\n  //GET Get initial cards\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //GET Get user info\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //PATCH Set user info\n  setUserInfo({ name, about }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ name, about }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //PATCH Set user avatar\n  setUserAvatar({ avatar }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ avatar }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //POST Add new place\n  addCard({ name, link }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: \"POST\",\n      body: JSON.stringify({ name, link }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //DELETE Remove place\n  removeCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: \"DELETE\",\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //PUT/DELETE Change Like status\n  changeLikeCardStatus(cardId, method) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: method,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //Get initial data\n  getAppInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n}\n\n//Init api\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n  headers: {\n    authorization: \"02dcf3f3-4313-4731-b00a-f80d0e88b6bf\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}