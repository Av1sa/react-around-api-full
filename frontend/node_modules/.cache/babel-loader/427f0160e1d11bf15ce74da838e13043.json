{"ast":null,"code":"import _classCallCheck from\"/Users/Marina/Yandex Practicum/around-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Marina/Yandex Practicum/around-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{baseUrl,headers,INVALID_INPUT_1,INVALID_INPUT_2,USER_NOT_FOUND,TOKEN_INVALID_1,TOKEN_INVALID_2}from\"./utils\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this.baseUrl=baseUrl;this.headers=headers;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res,message){return res.ok?res.json():Promise.reject(message?\"Error: \".concat(message):\"Error: \".concat(res.status));}//GET Get initial cards\n},{key:\"getInitialCards\",value:function getInitialCards(){var _this=this;return fetch(\"\".concat(this.baseUrl,\"/cards\"),{headers:this.headers}).then(function(res){return _this._getResponseData(res);});}//GET Get user info\n},{key:\"getUserInfo\",value:function getUserInfo(){var _this2=this;return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{headers:this.headers}).then(function(res){return _this2._getResponseData(res);});}//PATCH Set user info\n},{key:\"setUserInfo\",value:function setUserInfo(_ref2){var _this3=this;var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:\"PATCH\",headers:this.headers,body:JSON.stringify({name:name,about:about})}).then(function(res){return _this3._getResponseData(res);});}//PATCH Set user avatar\n},{key:\"setUserAvatar\",value:function setUserAvatar(_ref3){var _this4=this;var avatar=_ref3.avatar;return fetch(\"\".concat(this.baseUrl,\"/users/me/avatar\"),{method:\"PATCH\",headers:this.headers,body:JSON.stringify({avatar:avatar})}).then(function(res){return _this4._getResponseData(res);});}//POST Add new place\n},{key:\"addCard\",value:function addCard(_ref4){var _this5=this;var name=_ref4.name,link=_ref4.link;return fetch(\"\".concat(this.baseUrl,\"/cards\"),{headers:this.headers,method:\"POST\",body:JSON.stringify({name:name,link:link})}).then(function(res){return _this5._getResponseData(res);});}//DELETE Remove place\n},{key:\"removeCard\",value:function removeCard(cardId){var _this6=this;return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(cardId),{headers:this.headers,method:\"DELETE\"}).then(function(res){return _this6._getResponseData(res);});}//PUT/DELETE Change Like status\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,method){var _this7=this;return fetch(\"\".concat(this.baseUrl,\"/cards/likes/\").concat(cardId),{headers:this.headers,method:method}).then(function(res){return _this7._getResponseData(res);});}//Get initial data\n},{key:\"getAppInfo\",value:function getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()]);}//POST sign up\n},{key:\"signUp\",value:function signUp(_ref5){var _this8=this;var password=_ref5.password,email=_ref5.email;return fetch(\"\".concat(this.baseUrl,\"/signup\"),{headers:this.headers,method:\"POST\",body:JSON.stringify({password:password,email:email})}).then(function(res){return _this8._getResponseData(res);});}//POST sign in\n},{key:\"signIn\",value:function signIn(_ref6){var _this9=this;var password=_ref6.password,email=_ref6.email;return fetch(\"\".concat(this.baseUrl,\"/signin\"),{headers:this.headers,method:\"POST\",body:JSON.stringify({password:password,email:email})}).then(function(res){return _this9._getResponseData(res);});}//GET check token\n},{key:\"checkToken\",value:function checkToken(token){var _this10=this;return fetch(\"\".concat(this.baseUrl,\"/users.me\"),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(res){return _this10._getResponseData(res);});}}]);return Api;}();//Init api\nvar api=new Api({baseUrl:baseUrl,headers:headers});export default api;","map":{"version":3,"sources":["/Users/Marina/Yandex Practicum/around-react/src/utils/api.js"],"names":["baseUrl","headers","INVALID_INPUT_1","INVALID_INPUT_2","USER_NOT_FOUND","TOKEN_INVALID_1","TOKEN_INVALID_2","Api","res","message","ok","json","Promise","reject","status","fetch","then","_getResponseData","name","about","method","body","JSON","stringify","avatar","link","cardId","all","getInitialCards","getUserInfo","password","email","token","Authorization","api"],"mappings":"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","sourcesContent":["import {\n  baseUrl,\n  headers,\n  INVALID_INPUT_1,\n  INVALID_INPUT_2,\n  USER_NOT_FOUND,\n  TOKEN_INVALID_1,\n  TOKEN_INVALID_2,\n} from \"./utils\";\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n\n  _getResponseData(res, message) {\n    return res.ok\n      ? res.json()\n      : Promise.reject(message ? `Error: ${message}` : `Error: ${res.status}`);\n  }\n\n  //GET Get initial cards\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //GET Get user info\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //PATCH Set user info\n  setUserInfo({ name, about }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ name, about }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //PATCH Set user avatar\n  setUserAvatar({ avatar }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({ avatar }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //POST Add new place\n  addCard({ name, link }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: \"POST\",\n      body: JSON.stringify({ name, link }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //DELETE Remove place\n  removeCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: \"DELETE\",\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //PUT/DELETE Change Like status\n  changeLikeCardStatus(cardId, method) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: method,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //Get initial data\n  getAppInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n\n  //POST sign up\n  signUp({ password, email }) {\n    return fetch(`${this.baseUrl}/signup`, {\n      headers: this.headers,\n      method: \"POST\",\n      body: JSON.stringify({ password, email }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //POST sign in\n  signIn({ password, email }) {\n    return fetch(`${this.baseUrl}/signin`, {\n      headers: this.headers,\n      method: \"POST\",\n      body: JSON.stringify({ password, email }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //GET check token\n  checkToken(token) {\n    return fetch(`${this.baseUrl}/users.me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n}\n\n//Init api\nconst api = new Api({\n  baseUrl,\n  headers,\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}