{"ast":null,"code":"var _jsxFileName = \"/Users/Marina/Yandex Practicum/around-react/src/components/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithImage from \"./PopupWithImage\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport api from \"../utils/api\";\nimport auth from \"../utils/auth\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = useState(false);\n  const [isErrorTooltipOpen, setIsErrorTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    api.getAppInfo().then(([cardListData, userInfoData]) => {\n      setCurrentUser(userInfoData);\n      setCards(cardListData);\n\n      if (localStorage.getItem(\"jwt\")) {\n        auth.validateUser().then(res => {\n          setEmail(res.email);\n          setLoggedIn();\n        }).catch();\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleUpdateUser = ({\n    name,\n    description\n  }) => {\n    api.setUserInfo({\n      currentUser,\n      name: name,\n      about: description\n    }).then(res => {\n      setCurrentUser({ ...currentUser,\n        name: res.name,\n        about: res.about\n      });\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleUpdateAvatar = ({\n    avatar\n  }) => {\n    api.setUserAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser({ ...currentUser,\n        avatar: res.avatar\n      });\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleAddPlaceSubmit = ({\n    name,\n    link\n  }) => {\n    api.addCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([...cards, newCard]);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(c => c._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked ? \"DELETE\" : \"PUT\").then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  };\n\n  const handleCardDelete = card => {\n    api.removeCard(card._id).then(res => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    });\n  };\n\n  const handleCardClick = card => {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n    setIsSuccessTooltipOpen(false);\n    setIsErrorTooltipOpen(false);\n  };\n\n  const handleSignOut = () => {};\n\n  const handleLogin = () => {};\n\n  const handleRegister = () => {};\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    email: email,\n    loggedIn: loggedIn,\n    onSignOut: handleSignOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProtectedRoute, {\n    component: Main,\n    exact: true,\n    path: \"/\",\n    loggedIn: loggedIn,\n    cards: cards,\n    onCardClick: handleCardClick,\n    onCardDelete: handleCardDelete,\n    onCardLike: handleCardLike,\n    onEditProfile: handleEditProfileClick,\n    onEditAvatar: handleEditAvatarClick,\n    onAddPlace: handleAddPlaceClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    onLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    onRegister: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Redirect, {\n    to: loggedIn ? \"/\" : \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }))), loggedIn && /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithImage, {\n    card: selectedCard,\n    isOpen: isImagePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoTooltip, {\n    type: \"success\",\n    isOpen: isSuccessTooltipOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoTooltip, {\n    type: \"error\",\n    isOpen: isErrorTooltipOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Marina/Yandex Practicum/around-react/src/components/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Redirect","useHistory","CurrentUserContext","Header","ProtectedRoute","Main","Footer","PopupWithImage","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","InfoTooltip","api","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isSuccessTooltipOpen","setIsSuccessTooltipOpen","isErrorTooltipOpen","setIsErrorTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","email","setEmail","history","getAppInfo","then","cardListData","userInfoData","localStorage","getItem","validateUser","res","catch","error","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleUpdateUser","name","description","setUserInfo","about","closeAllPopups","handleUpdateAvatar","avatar","setUserAvatar","handleAddPlaceSubmit","link","addCard","newCard","handleCardLike","card","isLiked","likes","some","c","_id","changeLikeCardStatus","newCards","map","handleCardDelete","removeCard","filter","handleCardClick","handleSignOut","handleLogin","handleRegister"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithImage from \"./PopupWithImage\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport api from \"../utils/api\";\nimport auth from \"../utils/auth\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = useState(false);\n  const [isErrorTooltipOpen, setIsErrorTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    api\n      .getAppInfo()\n      .then(([cardListData, userInfoData]) => {\n        setCurrentUser(userInfoData);\n        setCards(cardListData);\n\n        if (localStorage.getItem(\"jwt\")) {\n          auth.validateUser()\n            .then(res => {\n              setEmail(res.email);\n              setLoggedIn()\n            })\n            .catch();\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const handleUpdateUser = ({ name, description }) => {\n    api\n      .setUserInfo({ currentUser, name: name, about: description })\n      .then((res) => {\n        setCurrentUser({\n          ...currentUser,\n          name: res.name,\n          about: res.about,\n        });\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const handleUpdateAvatar = ({ avatar }) => {\n    api\n      .setUserAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser({\n          ...currentUser,\n          avatar: res.avatar,\n        });\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleAddPlaceSubmit = ({ name, link }) => {\n    api\n      .addCard({ name, link })\n      .then((newCard) => {\n        setCards([...cards, newCard]);\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((c) => c._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, isLiked ? \"DELETE\" : \"PUT\")\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      });\n  };\n  const handleCardDelete = (card) => {\n    api.removeCard(card._id).then((res) => {\n      const newCards = cards.filter((c) => c._id !== card._id);\n      setCards(newCards);\n    });\n  };\n  const handleCardClick = (card) => {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n\n    setIsSuccessTooltipOpen(false);\n    setIsErrorTooltipOpen(false);\n  };\n\n  const handleSignOut = () => {};\n  const handleLogin = () => {};\n  const handleRegister = () => {};\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <BrowserRouter>\n        <Header email={email} loggedIn={loggedIn} onSignOut={handleSignOut} />\n        <Switch>\n          <ProtectedRoute\n            component={Main}\n            exact\n            path=\"/\"\n            loggedIn={loggedIn}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardDelete={handleCardDelete}\n            onCardLike={handleCardLike}\n            onEditProfile={handleEditProfileClick}\n            onEditAvatar={handleEditAvatarClick}\n            onAddPlace={handleAddPlaceClick}\n          />\n          <Route path=\"/signin\">\n            <Login onLogin={handleLogin} />\n          </Route>\n          <Route path=\"/signup\">\n            <Register onRegister={handleRegister} />\n          </Route>\n          <Route>\n            <Redirect to={loggedIn ? \"/\" : \"/signin\"} />\n          </Route>\n        </Switch>\n        {loggedIn && <Footer />}\n      </BrowserRouter>\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n      />\n      <PopupWithImage\n        card={selectedCard}\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n      />\n      <InfoTooltip\n        type=\"success\"\n        isOpen={isSuccessTooltipOpen}\n        onClose={closeAllPopups}\n      />\n      <InfoTooltip\n        type=\"error\"\n        isOpen={isErrorTooltipOpen}\n        onClose={closeAllPopups}\n      />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}