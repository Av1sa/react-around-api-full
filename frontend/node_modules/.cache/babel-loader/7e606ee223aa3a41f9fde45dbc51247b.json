{"ast":null,"code":"import React from\"react\";import imgSuccess from\"../images/success_tooltip.svg\";import imgError from\"../images/error_tooltip.svg\";function InfoTooltip(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,type=_ref.type;var imgSrc,imgAlt,text;switch(type){case\"success\":imgSrc=imgSuccess;imgAlt=\"Pic: success\";text=\"Success! You have now been registered.\";break;default:imgSrc=imgError;imgAlt=\"Pic: error\";text=\"Oops, something went wrong! Please try again.\";}return/*#__PURE__*/React.createElement(\"div\",{className:\"popup \".concat(isOpen&&\"popup_is-opened\")},/*#__PURE__*/React.createElement(\"div\",{className:\"popup__container popup__container_form popup__container_tooltip\"},/*#__PURE__*/React.createElement(\"img\",{src:imgSrc,alt:imgAlt}),/*#__PURE__*/React.createElement(\"p\",{className:\"popup__text\"},text),/*#__PURE__*/React.createElement(\"button\",{className:\"button button_close\",onClick:onClose})));}export default InfoTooltip;","map":{"version":3,"sources":["/Users/Marina/Yandex Practicum/around-react/src/components/InfoTooltip.js"],"names":["React","InfoTooltip","isOpen","onClose","type","imgSrc","imgAlt","text","imgSuccess","imgError"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wGAIA,QAASC,CAAAA,WAAT,MAAgD,IAAzBC,CAAAA,MAAyB,MAAzBA,MAAyB,CAAjBC,OAAiB,MAAjBA,OAAiB,CAARC,IAAQ,MAARA,IAAQ,CAC9C,GAAIC,CAAAA,MAAJ,CAAYC,MAAZ,CAAoBC,IAApB,CACA,OAAQH,IAAR,EACE,IAAK,SAAL,CACEC,MAAM,CAAGG,UAAT,CACAF,MAAM,CAAG,cAAT,CACAC,IAAI,CAAG,wCAAP,CACA,MACF,QACEF,MAAM,CAAGI,QAAT,CACAH,MAAM,CAAG,YAAT,CACAC,IAAI,CAAG,+CAAP,CATJ,CAWA,mBACE,2BAAK,SAAS,iBAAWL,MAAM,EAAI,iBAArB,CAAd,eACE,2BAAK,SAAS,CAAC,iEAAf,eACE,2BAAK,GAAG,CAAEG,MAAV,CAAkB,GAAG,CAAEC,MAAvB,EADF,cAEE,yBAAG,SAAS,CAAC,aAAb,EAA4BC,IAA5B,CAFF,cAGE,8BAAQ,SAAS,CAAC,qBAAlB,CAAwC,OAAO,CAAEJ,OAAjD,EAHF,CADF,CADF,CASD,CAED,cAAeF,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport imgSuccess from \"../images/success_tooltip.svg\";\nimport imgError from \"../images/error_tooltip.svg\";\n\nfunction InfoTooltip({ isOpen, onClose, type }) {\n  let imgSrc, imgAlt, text;\n  switch (type) {\n    case \"success\":\n      imgSrc = imgSuccess;\n      imgAlt = \"Pic: success\";\n      text = \"Success! You have now been registered.\";\n      break;\n    default:\n      imgSrc = imgError;\n      imgAlt = \"Pic: error\";\n      text = \"Oops, something went wrong! Please try again.\";\n  }\n  return (\n    <div className={`popup ${isOpen && \"popup_is-opened\"}`}>\n      <div className=\"popup__container popup__container_form popup__container_tooltip\">\n        <img src={imgSrc} alt={imgAlt} />\n        <p className=\"popup__text\">{text}</p>\n        <button className=\"button button_close\" onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;\n"]},"metadata":{},"sourceType":"module"}