{"ast":null,"code":"var _jsxFileName = \"/Users/Marina/Yandex Practicum/around-react/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport PopupWithImage from \"./PopupWithImage\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getAppInfo().then(([cardListData, userInfoData]) => {\n      setCurrentUser(userInfoData);\n      setCards(cardListData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleUpdateUser = ({\n    name,\n    description\n  }) => {\n    api.setUserInfo({\n      currentUser,\n      name: name,\n      about: description\n    }).then(res => {\n      setCurrentUser({ ...currentUser,\n        name: res.name,\n        about: res.about\n      });\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleUpdateAvatar = ({\n    avatar\n  }) => {\n    api.setUserAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser({ ...currentUser,\n        avatar: res.avatar\n      });\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(c => c._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked ? \"DELETE\" : \"PUT\").then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  };\n\n  const handleCardDelete = card => {\n    api.removeCard(card._id).then(res => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    });\n  };\n\n  const handleCardClick = card => {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n  };\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    cards: cards,\n    onCardClick: handleCardClick,\n    onCardDelete: handleCardDelete,\n    onCardLike: handleCardLike,\n    onEditProfile: handleEditProfileClick,\n    onEditAvatar: handleEditAvatarClick,\n    onAddPlace: handleAddPlaceClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAdd: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithImage, {\n    card: selectedCard,\n    isOpen: isImagePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Marina/Yandex Practicum/around-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","PopupWithImage","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","getAppInfo","then","cardListData","userInfoData","catch","error","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleUpdateUser","name","description","setUserInfo","about","res","closeAllPopups","handleUpdateAvatar","avatar","setUserAvatar","handleCardLike","card","isLiked","likes","some","c","_id","changeLikeCardStatus","newCard","newCards","map","handleCardDelete","removeCard","filter","handleCardClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport PopupWithImage from \"./PopupWithImage\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n    false\n  );\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api\n      .getAppInfo()\n      .then(([cardListData, userInfoData]) => {\n        setCurrentUser(userInfoData);\n        setCards(cardListData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const handleUpdateUser = ({ name, description }) => {\n    api\n      .setUserInfo({ currentUser, name: name, about: description })\n      .then((res) => {\n        setCurrentUser({\n          ...currentUser,\n          name: res.name,\n          about: res.about,\n        });\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const handleUpdateAvatar = ({ avatar }) => {\n    api\n      .setUserAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser({\n          ...currentUser,\n          avatar: res.avatar,\n        });\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((c) => c._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, isLiked ? \"DELETE\" : \"PUT\")\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      });\n  };\n  const handleCardDelete = (card) => {\n    api.removeCard(card._id).then((res) => {\n      const newCards = cards.filter((c) => c._id !== card._id);\n      setCards(newCards);\n    });\n  };\n  const handleCardClick = (card) => {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        cards={cards}\n        onCardClick={handleCardClick}\n        onCardDelete={handleCardDelete}\n        onCardLike={handleCardLike}\n        onEditProfile={handleEditProfileClick}\n        onEditAvatar={handleEditAvatarClick}\n        onAddPlace={handleAddPlaceClick}\n      />\n      <Footer />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAdd/>\n      <PopupWithImage\n        card={selectedCard}\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n      />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}