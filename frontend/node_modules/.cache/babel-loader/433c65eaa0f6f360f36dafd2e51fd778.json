{"ast":null,"code":"var _jsxFileName = \"/Users/Marina/Yandex Practicum/around-react/src/components/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithImage from \"./PopupWithImage\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport api from \"../utils/api\";\nimport auth from \"../utils/auth\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = useState(false);\n  const [isErrorTooltipOpen, setIsErrorTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    api.getAppInfo().then(([cardListData, userInfoData]) => {\n      setCurrentUser(userInfoData);\n      setCards(cardListData);\n    }).catch(error => {\n      console.log(error);\n    });\n    const token = localStorage.getItem(\"jwt\");\n\n    if (token) {\n      validateAndSetUser(token);\n    }\n  }, []);\n\n  const validateAndSetUser = token => {\n    auth.validateUser(token).then(user => {\n      setLoggedIn(true);\n      setEmail(user.email);\n      setCurrentUser(user); //history.push(\"/\");\n    }).catch(err => console.log(err));\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const openSuccessTooltip = () => {\n    setIsSuccessTooltipOpen(true);\n  };\n\n  const openErrorTooltip = () => {\n    setIsErrorTooltipOpen(true);\n  };\n\n  const handleUpdateUser = ({\n    name,\n    description\n  }) => {\n    api.setUserInfo({\n      currentUser,\n      name: name,\n      about: description\n    }).then(res => {\n      setCurrentUser({ ...currentUser,\n        name: res.name,\n        about: res.about\n      });\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleUpdateAvatar = ({\n    avatar\n  }) => {\n    api.setUserAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser({ ...currentUser,\n        avatar: res.avatar\n      });\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleAddPlaceSubmit = ({\n    name,\n    link\n  }) => {\n    api.addCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([...cards, newCard]);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(c => c._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked ? \"DELETE\" : \"PUT\").then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  };\n\n  const handleCardDelete = card => {\n    api.removeCard(card._id).then(res => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    });\n  };\n\n  const handleCardClick = card => {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n    setIsSuccessTooltipOpen(false);\n    setIsErrorTooltipOpen(false);\n  };\n\n  const handleSignOut = () => {};\n\n  const handleSignIn = data => {\n    auth.signInUser(data).then(({\n      token\n    }) => {\n      localStorage.setItem(\"jwt\", token);\n      validateAndSetUser(token);\n    }).catch(err => {\n      openErrorTooltip();\n      console.log(err);\n    });\n  };\n\n  const handleRegister = data => {\n    auth.registerUser(data).then(() => {\n      //history.push('/signin')\n      openSuccessTooltip();\n    }).catch(() => {\n      openErrorTooltip();\n      console.log(\"400 - one of the fields was filled in incorrectly\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    email: email,\n    loggedIn: loggedIn,\n    onSignOut: handleSignOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProtectedRoute, {\n    component: Main,\n    exact: true,\n    path: \"/\",\n    loggedIn: loggedIn,\n    cards: cards,\n    onCardClick: handleCardClick,\n    onCardDelete: handleCardDelete,\n    onCardLike: handleCardLike,\n    onEditProfile: handleEditProfileClick,\n    onEditAvatar: handleEditAvatarClick,\n    onAddPlace: handleAddPlaceClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    onLogin: handleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    onRegister: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Redirect, {\n    to: loggedIn ? \"/\" : \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }))), loggedIn && /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithImage, {\n    card: selectedCard,\n    isOpen: isImagePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoTooltip, {\n    type: \"success\",\n    isOpen: isSuccessTooltipOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoTooltip, {\n    type: \"error\",\n    isOpen: isErrorTooltipOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Marina/Yandex Practicum/around-react/src/components/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Redirect","useHistory","CurrentUserContext","Header","ProtectedRoute","Main","Footer","PopupWithImage","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","InfoTooltip","api","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isSuccessTooltipOpen","setIsSuccessTooltipOpen","isErrorTooltipOpen","setIsErrorTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","email","setEmail","history","getAppInfo","then","cardListData","userInfoData","catch","error","console","log","token","localStorage","getItem","validateAndSetUser","validateUser","user","err","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","openSuccessTooltip","openErrorTooltip","handleUpdateUser","name","description","setUserInfo","about","res","closeAllPopups","handleUpdateAvatar","avatar","setUserAvatar","handleAddPlaceSubmit","link","addCard","newCard","handleCardLike","card","isLiked","likes","some","c","_id","changeLikeCardStatus","newCards","map","handleCardDelete","removeCard","filter","handleCardClick","handleSignOut","handleSignIn","data","signInUser","setItem","handleRegister","registerUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithImage from \"./PopupWithImage\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport api from \"../utils/api\";\nimport auth from \"../utils/auth\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = useState(false);\n  const [isErrorTooltipOpen, setIsErrorTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    api\n      .getAppInfo()\n      .then(([cardListData, userInfoData]) => {\n        setCurrentUser(userInfoData);\n        setCards(cardListData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      validateAndSetUser(token);\n    }\n  }, []);\n\n  const validateAndSetUser = (token) => {\n    auth\n      .validateUser(token)\n      .then((user) => {\n        setLoggedIn(true);\n        setEmail(user.email);\n        setCurrentUser(user);\n        //history.push(\"/\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const openSuccessTooltip = () => {\n    setIsSuccessTooltipOpen(true);\n  };\n  const openErrorTooltip = () => {\n    setIsErrorTooltipOpen(true);\n  };\n  const handleUpdateUser = ({ name, description }) => {\n    api\n      .setUserInfo({ currentUser, name: name, about: description })\n      .then((res) => {\n        setCurrentUser({\n          ...currentUser,\n          name: res.name,\n          about: res.about,\n        });\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const handleUpdateAvatar = ({ avatar }) => {\n    api\n      .setUserAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser({\n          ...currentUser,\n          avatar: res.avatar,\n        });\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleAddPlaceSubmit = ({ name, link }) => {\n    api\n      .addCard({ name, link })\n      .then((newCard) => {\n        setCards([...cards, newCard]);\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((c) => c._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, isLiked ? \"DELETE\" : \"PUT\")\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      });\n  };\n  const handleCardDelete = (card) => {\n    api.removeCard(card._id).then((res) => {\n      const newCards = cards.filter((c) => c._id !== card._id);\n      setCards(newCards);\n    });\n  };\n  const handleCardClick = (card) => {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n\n    setIsSuccessTooltipOpen(false);\n    setIsErrorTooltipOpen(false);\n  };\n\n  const handleSignOut = () => {};\n  const handleSignIn = (data) => {\n    auth\n      .signInUser(data)\n      .then(({ token }) => {\n        localStorage.setItem(\"jwt\", token);\n        validateAndSetUser(token);\n      })\n      .catch((err) => {\n        openErrorTooltip();\n        console.log(err);\n      });\n  };\n  const handleRegister = (data) => {\n    auth\n      .registerUser(data)\n      .then(() => {\n        //history.push('/signin')\n        openSuccessTooltip();\n      })\n      .catch(() => {\n        openErrorTooltip();\n        console.log(\"400 - one of the fields was filled in incorrectly\");\n      });\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <BrowserRouter>\n        <Header email={email} loggedIn={loggedIn} onSignOut={handleSignOut} />\n        <Switch>\n          <ProtectedRoute\n            component={Main}\n            exact\n            path=\"/\"\n            loggedIn={loggedIn}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardDelete={handleCardDelete}\n            onCardLike={handleCardLike}\n            onEditProfile={handleEditProfileClick}\n            onEditAvatar={handleEditAvatarClick}\n            onAddPlace={handleAddPlaceClick}\n          />\n          <Route path=\"/signin\">\n            <Login onLogin={handleSignIn} />\n          </Route>\n          <Route path=\"/signup\">\n            <Register onRegister={handleRegister} />\n          </Route>\n          <Route>\n            <Redirect to={loggedIn ? \"/\" : \"/signin\"} />\n          </Route>\n        </Switch>\n        {loggedIn && <Footer />}\n      </BrowserRouter>\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n      />\n      <PopupWithImage\n        card={selectedCard}\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n      />\n      <InfoTooltip\n        type=\"success\"\n        isOpen={isSuccessTooltipOpen}\n        onClose={closeAllPopups}\n      />\n      <InfoTooltip\n        type=\"error\"\n        isOpen={isErrorTooltipOpen}\n        onClose={closeAllPopups}\n      />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}